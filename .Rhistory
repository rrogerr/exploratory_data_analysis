if(coin_flip){
data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
}
}
heatmap(data_matrix)
hh <- hclust(dist(data_matrix))
data_matrix_ordered <- data_matrix[hh$order, ]
par(mfrow = c(1,3))
image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
ylab = "Row", pch = 19)
plot(colMeans(data_matrix_ordered), xlab = "Column",
ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
setwd(dirname(sys.frame(1)$ofile))
getwd()
set.seed(12345)
par(mar = rep(1, 4))
data_matrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
heatmap(data_matrix)
set.seed(678910)
for(i in 1:40){
# flip a coin
coin_flip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a pattern to that row
if(coin_flip){
data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
}
}
heatmap(data_matrix)
hh <- hclust(dist(data_matrix))
data_matrix_ordered <- data_matrix[hh$order, ]
par(mfrow = c(1,3))
image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
ylab = "Row", pch = 19)
plot(colMeans(data_matrix_ordered), xlab = "Column",
ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
setwd(dirname(sys.frame(1)$ofile))
getwd()
set.seed(12345)
par(mar = rep(1, 4))
data_matrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
heatmap(data_matrix)
set.seed(678910)
for(i in 1:40){
# flip a coin
coin_flip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a pattern to that row
if(coin_flip){
data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
}
}
heatmap(data_matrix)
hh <- hclust(dist(data_matrix))
data_matrix_ordered <- data_matrix[hh$order, ]
par(mfrow = c(1,3))
image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
ylab = "Row", pch = 19)
plot(colMeans(data_matrix_ordered), xlab = "Column",
ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
dirname(sys.frame(1)$ofile)
set.seed(12345)
par(mar = rep(1, 4))
data_matrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
heatmap(data_matrix)
set.seed(678910)
for(i in 1:40){
# flip a coin
coin_flip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a pattern to that row
if(coin_flip){
data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
}
}
heatmap(data_matrix)
hh <- hclust(dist(data_matrix))
data_matrix_ordered <- data_matrix[hh$order, ]
par(mfrow = c(1,3))
image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
ylab = "Row", pch = 19)
plot(colMeans(data_matrix_ordered), xlab = "Column",
ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
frame_files <- lapply(sys.frames(), function(x) x$ofile)
frame_files <- Filter(Negate(is.null), frame_files)
PATH <- dirname(frame_files[[length(frame_files)]])
PATH
set.seed(12345)
par(mar = rep(1, 4))
data_matrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
heatmap(data_matrix)
set.seed(678910)
for(i in 1:40){
# flip a coin
coin_flip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a pattern to that row
if(coin_flip){
data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
}
}
heatmap(data_matrix)
hh <- hclust(dist(data_matrix))
data_matrix_ordered <- data_matrix[hh$order, ]
par(mfrow = c(1,3))
image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
ylab = "Row", pch = 19)
plot(colMeans(data_matrix_ordered), xlab = "Column",
ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
frame_files <- lapply(sys.frames(), function(x) x$ofile)
frame_files <- Filter(Negate(is.null), frame_files)
PATH <- dirname(frame_files[[length(frame_files)]])
PATH
set.seed(12345)
par(mar = rep(1, 4))
data_matrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
heatmap(data_matrix)
set.seed(678910)
for(i in 1:40){
# flip a coin
coin_flip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a pattern to that row
if(coin_flip){
data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
}
}
heatmap(data_matrix)
hh <- hclust(dist(data_matrix))
data_matrix_ordered <- data_matrix[hh$order, ]
par(mfrow = c(1,3))
image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
ylab = "Row", pch = 19)
plot(colMeans(data_matrix_ordered), xlab = "Column",
ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
setwd("/home/rogelio/Desktop/datasciencecoursera/exploratory_data_analysis")
load("./face.rda")
image(t(faceData)[,nrow(faceData):1])
set.seed(12345)
par(mar = rep(1, 4))
data_matrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
heatmap(data_matrix)
set.seed(678910)
for(i in 1:40){
# flip a coin
coin_flip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a pattern to that row
if(coin_flip){
data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
}
}
heatmap(data_matrix)
hh <- hclust(dist(data_matrix))
data_matrix_ordered <- data_matrix[hh$order, ]
par(mfrow = c(1,3))
image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
ylab = "Row", pch = 19)
plot(colMeans(data_matrix_ordered), xlab = "Column",
ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
setwd("/home/rogelio/Desktop/datasciencecoursera/exploratory_data_analysis")
png(file = "./f.png")
load("./face.rda")
image(t(faceData)[,nrow(faceData):1])
dev.off()
set.seed(12345)
par(mar = rep(1, 4))
data_matrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
heatmap(data_matrix)
set.seed(678910)
for(i in 1:40){
# flip a coin
coin_flip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a pattern to that row
if(coin_flip){
data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
}
}
heatmap(data_matrix)
hh <- hclust(dist(data_matrix))
data_matrix_ordered <- data_matrix[hh$order, ]
par(mfrow = c(1,3))
image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
ylab = "Row", pch = 19)
plot(colMeans(data_matrix_ordered), xlab = "Column",
ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
setwd("/home/rogelio/Desktop/datasciencecoursera/exploratory_data_analysis")
load("./face.rda")
image(t(faceData)[,nrow(faceData):1])
svd1 <- svd(scale(faceData))
str(svd1)
# set.seed(12345)
# par(mar = rep(1, 4))
# data_matrix <- matrix(rnorm(400), nrow = 40)
#
# image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
# heatmap(data_matrix)
#
# set.seed(678910)
# for(i in 1:40){
#         # flip a coin
#         coin_flip <- rbinom(1, size = 1, prob = 0.5)
#         # if coin is heads add a pattern to that row
#         if(coin_flip){
#                 data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
#         }
# }
#
# heatmap(data_matrix)
#
# hh <- hclust(dist(data_matrix))
# data_matrix_ordered <- data_matrix[hh$order, ]
# par(mfrow = c(1,3))
# image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
# plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
#      ylab = "Row", pch = 19)
# plot(colMeans(data_matrix_ordered), xlab = "Column",
#      ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
setwd("/home/rogelio/Desktop/datasciencecoursera/exploratory_data_analysis")
load("./face.rda")
image(t(faceData)[,nrow(faceData):1])
svd1 <- svd(scale(faceData))
plot(svd1$d^2/sum(svd1$d^2), pch = 19, xlab = "singular vector",
ylab = "variance explained")
# set.seed(12345)
# par(mar = rep(1, 4))
# data_matrix <- matrix(rnorm(400), nrow = 40)
#
# image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
# heatmap(data_matrix)
#
# set.seed(678910)
# for(i in 1:40){
#         # flip a coin
#         coin_flip <- rbinom(1, size = 1, prob = 0.5)
#         # if coin is heads add a pattern to that row
#         if(coin_flip){
#                 data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
#         }
# }
#
# heatmap(data_matrix)
#
# hh <- hclust(dist(data_matrix))
# data_matrix_ordered <- data_matrix[hh$order, ]
# par(mfrow = c(1,3))
# image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
# plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
#      ylab = "Row", pch = 19)
# plot(colMeans(data_matrix_ordered), xlab = "Column",
#      ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
setwd("/home/rogelio/Desktop/datasciencecoursera/exploratory_data_analysis")
load("./face.rda")
# image(t(faceData)[,nrow(faceData):1])
svd1 <- svd(scale(faceData))
plot(svd1$d^2/sum(svd1$d^2), pch = 19, xlab = "singular vector",
ylab = "variance explained")
rm(list = ls())
# set.seed(12345)
# par(mar = rep(1, 4))
# data_matrix <- matrix(rnorm(400), nrow = 40)
#
# image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
# heatmap(data_matrix)
#
# set.seed(678910)
# for(i in 1:40){
#         # flip a coin
#         coin_flip <- rbinom(1, size = 1, prob = 0.5)
#         # if coin is heads add a pattern to that row
#         if(coin_flip){
#                 data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
#         }
# }
#
# heatmap(data_matrix)
#
# hh <- hclust(dist(data_matrix))
# data_matrix_ordered <- data_matrix[hh$order, ]
# par(mfrow = c(1,3))
# image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
# plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
#      ylab = "Row", pch = 19)
# plot(colMeans(data_matrix_ordered), xlab = "Column",
#      ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
setwd("/home/rogelio/Desktop/datasciencecoursera/exploratory_data_analysis")
load("./face.rda")
# image(t(faceData)[,nrow(faceData):1])
svd1 <- svd(scale(faceData))
plot(svd1$d^2/sum(svd1$d^2), pch = 19, xlab = "singular vector",
ylab = "variance explained")
# set.seed(12345)
# par(mar = rep(1, 4))
# data_matrix <- matrix(rnorm(400), nrow = 40)
#
# image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
# heatmap(data_matrix)
#
# set.seed(678910)
# for(i in 1:40){
#         # flip a coin
#         coin_flip <- rbinom(1, size = 1, prob = 0.5)
#         # if coin is heads add a pattern to that row
#         if(coin_flip){
#                 data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
#         }
# }
#
# heatmap(data_matrix)
#
# hh <- hclust(dist(data_matrix))
# data_matrix_ordered <- data_matrix[hh$order, ]
# par(mfrow = c(1,3))
# image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
# plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
#      ylab = "Row", pch = 19)
# plot(colMeans(data_matrix_ordered), xlab = "Column",
#      ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
setwd("/home/rogelio/Desktop/datasciencecoursera/exploratory_data_analysis")
load("./face.rda")
# image(t(faceData)[,nrow(faceData):1])
par(mar = rep(1,4))
svd1 <- svd(scale(faceData))
plot(svd1$d^2/sum(svd1$d^2), pch = 19, xlab = "singular vector",
ylab = "variance explained")
dev.off()
# set.seed(12345)
# par(mar = rep(1, 4))
# data_matrix <- matrix(rnorm(400), nrow = 40)
#
# image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
# heatmap(data_matrix)
#
# set.seed(678910)
# for(i in 1:40){
#         # flip a coin
#         coin_flip <- rbinom(1, size = 1, prob = 0.5)
#         # if coin is heads add a pattern to that row
#         if(coin_flip){
#                 data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
#         }
# }
#
# heatmap(data_matrix)
#
# hh <- hclust(dist(data_matrix))
# data_matrix_ordered <- data_matrix[hh$order, ]
# par(mfrow = c(1,3))
# image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
# plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
#      ylab = "Row", pch = 19)
# plot(colMeans(data_matrix_ordered), xlab = "Column",
#      ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
setwd("/home/rogelio/Desktop/datasciencecoursera/exploratory_data_analysis")
load("./face.rda")
# image(t(faceData)[,nrow(faceData):1])
par(mar = rep(1,4))
svd1 <- svd(scale(faceData))
plot(svd1$d^2/sum(svd1$d^2), pch = 19, xlab = "singular vector",
ylab = "variance explained")
# set.seed(12345)
# par(mar = rep(1, 4))
# data_matrix <- matrix(rnorm(400), nrow = 40)
#
# image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
# heatmap(data_matrix)
#
# set.seed(678910)
# for(i in 1:40){
#         # flip a coin
#         coin_flip <- rbinom(1, size = 1, prob = 0.5)
#         # if coin is heads add a pattern to that row
#         if(coin_flip){
#                 data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
#         }
# }
#
# heatmap(data_matrix)
#
# hh <- hclust(dist(data_matrix))
# data_matrix_ordered <- data_matrix[hh$order, ]
# par(mfrow = c(1,3))
# image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
# plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
#      ylab = "Row", pch = 19)
# plot(colMeans(data_matrix_ordered), xlab = "Column",
#      ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
setwd("/home/rogelio/Desktop/datasciencecoursera/exploratory_data_analysis")
load("./face.rda")
# image(t(faceData)[,nrow(faceData):1])
par(mar = rep(1,4))
svd1 <- svd(scale(faceData))
plot(svd1$d^2/sum(svd1$d^2), pch = 19, xlab = "singular vector",
ylab = "variance explained")
getwd()
# set.seed(12345)
# par(mar = rep(1, 4))
# data_matrix <- matrix(rnorm(400), nrow = 40)
#
# image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
# heatmap(data_matrix)
#
# set.seed(678910)
# for(i in 1:40){
#         # flip a coin
#         coin_flip <- rbinom(1, size = 1, prob = 0.5)
#         # if coin is heads add a pattern to that row
#         if(coin_flip){
#                 data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
#         }
# }
#
# heatmap(data_matrix)
#
# hh <- hclust(dist(data_matrix))
# data_matrix_ordered <- data_matrix[hh$order, ]
# par(mfrow = c(1,3))
# image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
# plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
#      ylab = "Row", pch = 19)
# plot(colMeans(data_matrix_ordered), xlab = "Column",
#      ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
setwd("/home/rogelio/Desktop/datasciencecoursera/exploratory_data_analysis")
load("./face.rda")
# image(t(faceData)[,nrow(faceData):1])
par(mar = rep(1,4))
svd1 <- svd(scale(faceData))
plot(svd1$d^2/sum(svd1$d^2), pch = 19, xlab = "singular vector",
ylab = "variance explained")
# set.seed(12345)
# par(mar = rep(1, 4))
# data_matrix <- matrix(rnorm(400), nrow = 40)
#
# image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
# heatmap(data_matrix)
#
# set.seed(678910)
# for(i in 1:40){
#         # flip a coin
#         coin_flip <- rbinom(1, size = 1, prob = 0.5)
#         # if coin is heads add a pattern to that row
#         if(coin_flip){
#                 data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
#         }
# }
#
# heatmap(data_matrix)
#
# hh <- hclust(dist(data_matrix))
# data_matrix_ordered <- data_matrix[hh$order, ]
# par(mfrow = c(1,3))
# image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
# plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
#      ylab = "Row", pch = 19)
# plot(colMeans(data_matrix_ordered), xlab = "Column",
#      ylab = "Column Mean", pch = 19)
################ SINGLE VALUE DECOMPOSITION ################
setwd("/home/rogelio/Desktop/datasciencecoursera/exploratory_data_analysis")
load("./face.rda")
image(t(faceData)[,nrow(faceData):1])
# par(mar = rep(1,4))
#
# svd1 <- svd(scale(faceData))
# plot(svd1$d^2/sum(svd1$d^2), pch = 19, xlab = "singular vector",
#      ylab = "variance explained")
set.seed(12345)
par(mar = rep(1, 4))
data_matrix <- matrix(rnorm(400), nrow = 40)
image(1:10, 1:40, t(data_matrix)[,nrow(data_matrix):1])
heatmap(data_matrix)
set.seed(678910)
for(i in 1:40){
# flip a coin
coin_flip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a pattern to that row
if(coin_flip){
data_matrix[i,] <- data_matrix[i,] + rep(c(0,3), each = 5)
}
}
heatmap(data_matrix)
hh <- hclust(dist(data_matrix))
data_matrix_ordered <- data_matrix[hh$order, ]
par(mfrow = c(1,3))
image(t(data_matrix_ordered)[,nrow(data_matrix_ordered):1])
plot(rowMeans(data_matrix_ordered), 40:1, xlab = "Row Mean",
ylab = "Row", pch = 19)
plot(colMeans(data_matrix_ordered), xlab = "Column",
ylab = "Column Mean", pch = 19)
